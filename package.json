{
	"name": "@monstermakes/larry-identity-angular-client",
	"description": "Clientside of larry-identity. ",
	"version": "0.0.3",
	"private": true,
	"publishConfig": {},
	"files": [
		"dist/auth/*"
	],
	"bin": {},
	"scripts": {
		"lint": "echo '=> Linting... ' && ng lint",
		"lint-fix": "echo '=> Fixing Linting errors...' && ng lint --fix",
		"prepublishOnly": "echo '=> This is an angular library project and should not be published directly to npm! Make sure you run npm run release instead of npm publish. Exiting...' && exit 0",
		"release-auth": "npm run build-auth && echo '=> Releasing auth lib...' && cd dist/auth && npm publish",
		"readiness-check": "echo '=> Checking Readiness' && npm test",
		"test": "echo '=> Verifying...' && npm run lint && npm run test-coverage",
		"test-coverage": "echo '=> TODO Run cypress Tests w/ Coverage...'",
		"serve-dev-watch": "npm-run-all -p -r build-auth-watch serve-dev-after-build",
		"build-auth-watch": "echo '=> Building auth lib...' && rm -rf dist/auth && ng build auth --watch",
		"serve-dev-after-build": "wait-on dist/auth && npm run serve-dev",
		"build-auth": "echo '=> Building auth lib...' && ng build auth",
		"build-web": "echo '=> Building webapp...' && ng build --prod",
		"build-docker": "docker build -f ./src/docker/ci/Dockerfile -t $(node -e 'console.log(`${process.env.npm_package_name}:${process.env.npm_package_version}`.slice(1));') .",
		"build-artifacts": "echo '=> Building all artifacts...' && echo '=> Cleaning dist...' && rm -rf dist && npm run build-auth && npm run build-web && npm run build-docker",
		"start": "npm run serve-dev-watch",
		"serve-dev": "echo '=> Running app in Development mode...' && docker-compose -f ./src/docker/dev/docker-compose.yml up --build",
		"serve": "echo '=> Running app in Production mode...' && npm run build-artifacts && export WebAppImageTag=$(node -e 'console.log(`${process.env.npm_package_name}:${process.env.npm_package_version}`.slice(1));') && docker-compose -f ./src/docker/ci/docker-compose.yml up",
		"serve-detached": "echo '=> Running app in CI mode (detached)...' && npm run build-artifacts && export WebAppImageTag=$(node -e 'console.log(`${process.env.npm_package_name}:${process.env.npm_package_version}`.slice(1));') && docker-compose -f ./src/docker/ci/docker-compose.yml up -d && wget --retry-connrefused --tries=7 --spider 127.0.0.1:8000/health-check && echo '=> App now running in CI mode!'",
		"stop-detached": "echo '=> Stopping CI app...' && export WebAppImageTag=$(node -e 'console.log(`${process.env.npm_package_name}:${process.env.npm_package_version}`.slice(1));') && docker-compose -f ./src/docker/ci/docker-compose.yml down"
	},
	"dependencies": {
		"@angular/animations": "~7.2.0",
		"@angular/common": "~7.2.0",
		"@angular/compiler": "~7.2.0",
		"@angular/core": "~7.2.0",
		"@angular/forms": "~7.2.0",
		"@angular/platform-browser": "~7.2.0",
		"@angular/platform-browser-dynamic": "~7.2.0",
		"@angular/router": "~7.2.0",
		"core-js": "^2.5.4",
		"jwt-decode": "^2.2.0",
		"node-forge": "^0.8.3",
		"rxjs": "~6.3.3",
		"service": "^0.1.4",
		"tslib": "^1.9.0",
		"zone.js": "~0.8.26"
	},
	"devDependencies": {
		"@angular-devkit/build-angular": "~0.13.0",
		"@angular-devkit/build-ng-packagr": "~0.13.0",
		"@angular/cli": "~7.3.8",
		"@angular/compiler-cli": "~7.2.0",
		"@angular/language-service": "~7.2.0",
		"@types/node": "~8.9.4",
		"@types/lodash": "^4.14.129",
		"@types/node-forge": "^0.8.3",
		"codelyzer": "~4.5.0",
		"ng-packagr": "^4.2.0",
		"npm-run-all": "^4.1.5",
		"ts-node": "~7.0.0",
		"tsickle": ">=0.34.0",
		"tslib": "^1.9.0",
		"tslint": "~5.11.0",
		"typescript": "~3.2.2",
		"wait-on": "^3.2.0"
	}
}
